// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NearEarthObjectsWebService.EfCore;

#nullable disable

namespace NearEarthObjectsWebService.EfCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250721155838_InitialDbCreation")]
    partial class InitialDbCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NearEarthObjectsWebService.EfCore.Tables.Asteroid", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<decimal>("AbsoluteMagnitude")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<DateTime>("CloseApproachDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<decimal>("EstimatedDiameter")
                        .HasColumnType("decimal(11, 10)");

                    b.Property<bool>("IsPotentiallyHazardous")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSentryObject")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSoftDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<decimal>("MissDistance")
                        .HasColumnType("decimal(11, 10)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NasaJplUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("OrbitingBodyId")
                        .HasColumnType("int");

                    b.Property<decimal>("RelativeVelocity")
                        .HasColumnType("decimal(11, 10)");

                    b.Property<string>("SentryDataUrl")
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id")
                        .HasName("PK_Asteroids");

                    b.HasIndex("OrbitingBodyId");

                    b.ToTable("Asteroids");
                });

            modelBuilder.Entity("NearEarthObjectsWebService.EfCore.Tables.SetupOrbitingBody", b =>
                {
                    b.Property<int>("OrbitingBodyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<bool?>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("1");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.HasKey("OrbitingBodyId")
                        .HasName("PK_SetupOrbitingBodies");

                    b.ToTable("SetupOrbitingBodies");
                });

            modelBuilder.Entity("NearEarthObjectsWebService.EfCore.Tables.Asteroid", b =>
                {
                    b.HasOne("NearEarthObjectsWebService.EfCore.Tables.SetupOrbitingBody", "OrbitingBody")
                        .WithMany("Asteroids")
                        .HasForeignKey("OrbitingBodyId")
                        .IsRequired()
                        .HasConstraintName("FK_Asteroids_SetupOrbitingBody");

                    b.Navigation("OrbitingBody");
                });

            modelBuilder.Entity("NearEarthObjectsWebService.EfCore.Tables.SetupOrbitingBody", b =>
                {
                    b.Navigation("Asteroids");
                });
#pragma warning restore 612, 618
        }
    }
}
